{"version":3,"sources":["reportWebVitals.js","hoc/Auxi/Auxi.js","components/Navigation/NavigationItem/NavigationItem.js","redux/reducer/globalActionType.js","components/Navigation/Navigation.js","redux/action/globalFunctionAction.js","hoc/Layout.js","components/Modal/Modal.js","components/Card/Card.js","containers/ListBuilder/ListBuilder.js","containers/DetailBuilder/DetailBuilder.js","containers/MyListBuilder/MyListBuilder.js","App.js","redux/reducer/globalReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","auxi","props","children","navigationItem","link","search","className","to","pathname","hash","exact","onClick","clicked","ActionType","ADD_POKEMON","SHOW_MY_POKEMON","REMOVE_POKEMON","connect","state","totalOwn","pokemonList","dispatch","handleShowMyPokemon","data","type","useEffect","handleShowTotal","pokemon","JSON","parse","localStorage","getItem","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","id","length","Layout","handleAddPokemon","name","handleAddMyPokemon","handleRemovePokemon","handleRemoveMyPokemon","useHistory","location","useState","showModal","setShow","fields","errors","setState","handleKeepClicked","e","stopPropagation","preventDefault","formIsValid","find","res","toLowerCase","prevState","handleValidation","window","reload","button","Button","variant","Math","random","alert","handleShow","handleReleaseClicked","Modal","show","onHide","Header","closeButton","Title","Body","refs","placeholder","onKeyDown","keyCode","handleEnterInput","onChange","field","target","value","handleChange","autoComplete","style","color","Footer","Card","history","pokemonInfo","loaded","fetchData","fetch","url","json","response","pokemonSprites","sprites","front_default","layout","types","moves","map","move","join","height","weight","push","handleCardClicked","alt","ListBuilder","setPokemonList","results","finalPokemonList","index","DetailBuilder","parsed","require","floor","myListLayout","App","path","component","MyListBuilder","render","globalState","rootReducer","action","oldPokemonList","setItem","stringify","removePokemon","splice","indexOf","storeRedux","createStore","applyMiddleware","thunk","app","store","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8eed8c17.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const auxi = (props) => props.children;\n\nexport default auxi;","import React from 'react';\nimport './NavigationItem.css';\n\n//router\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => {\n    const { link, search } = props;\n\n    return (\n        <li className=\"nav-item\">\n            <NavLink \n                to={{\n                    pathname: link, \n                    hash: props.hash, \n                    search: search }}\n                exact={props.exact}\n                onClick={props.clicked}\n                className={\"nav-link\"}>{props.children}</NavLink>\n        </li>\n    );\n}\n\nexport default navigationItem;","// export const CAPTURE = 'CAPTURE';\n// export const RELEASE = 'RELEASE';\n// export const ADD_POKEMON = 'ADD_POKEMON';\n// export const ADD_POKEMONS = 'ADD_POKEMONS';\n\nconst ActionType = {\n    ADD_POKEMON: 'ADD_POKEMON',\n    SHOW_MY_POKEMON: 'SHOW_MY_POKEMON',\n    REMOVE_POKEMON: 'REMOVE_POKEMON'\n}\n\nexport default ActionType;","import React, { useEffect } from 'react';\nimport './Navigation.css';\n\n//components\nimport Aux from '../../hoc/Auxi/Auxi';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\n//redux\nimport { connect } from 'react-redux';\nimport { handleShowMyPokemon } from '../../redux/action/globalFunctionAction';\n\nconst Navigation = (props) => {\n    useEffect(() => {\n        handleShowTotal();\n    }, []);\n\n    const handleShowTotal = () => {\n        const pokemon = JSON.parse(localStorage.getItem('pokemon'));\n        if (pokemon) props.handleShowMyPokemon(pokemon)\n    }\n\n    return (\n        <Aux>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light toolbar\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"navbar-brand image\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/Pok%C3%A9mon_GO_logo.svg/1200px-Pok%C3%A9mon_GO_logo.svg.png\"/>\n                </div>\n                \n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <hr />\n                    <ul className=\"navbar-nav\">\n                    <NavigationItem link=\"/\" hash=\"\" search=\"\" exact>All Pokemon</NavigationItem>\n                    <NavigationItem link=\"/my-pokemon-list\" hash=\"\" search=\"\">My Pokemon</NavigationItem>\n                    <NavigationItem link=\"/catch-random-pokemon\" hash=\"\" search=\"\">Random Pokemon</NavigationItem>\n                    </ul>\n                    <hr/>\n                </div>\n                <div>Total Owned: {props.totalOwn.length}</div>\n            </nav>\n        </Aux>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        totalOwn: state.pokemonList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleShowMyPokemon: (data) => dispatch(handleShowMyPokemon(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import ActionType from '../reducer/globalActionType';\n\nexport const handleAddMyPokemon = (data, name) => dispatch => {\n  dispatch({type: ActionType.ADD_POKEMON, data, name})\n}\n\nexport const handleShowMyPokemon = (data) => dispatch => {\n  dispatch({type: ActionType.SHOW_MY_POKEMON, data})\n}\n\nexport const handleRemoveMyPokemon = (name) => dispatch => {\n  dispatch({type: ActionType.REMOVE_POKEMON, name})\n}","import React from 'react';\nimport './Layout.css';\n\n//component\nimport Aux from './Auxi/Auxi';\nimport Navigation from '../components/Navigation/Navigation';\n\nconst Layout = (props) => {\n    return (\n        <Aux>\n            <Navigation />\n            <main className=\"main\">\n                {props.children}\n            </main>\n        </Aux>\n    );\n}\n\nexport default Layout;","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport './Modal.css';\n\n//component\nimport Aux from '../../hoc/Auxi/Auxi';\n\n//router\nimport { useHistory } from 'react-router-dom';\n\n//redux\nimport { connect } from 'react-redux';\nimport { handleAddMyPokemon, handleRemoveMyPokemon } from '../../redux/action/globalFunctionAction';\n\nconst ModalLayout = (props) => {\n    const pokemon = props.pokemon;\n    const history = useHistory();\n    const { pathname } = history.location;\n\n    const [showModal, setShow] = useState(false);\n    const [state, setState] = useState({\n        fields: {},\n        errors: {}\n    })\n\n    const handleValidation = () => {\n        let fields = state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if(!fields[\"name\"]){\n            formIsValid = false;\n            errors[\"name\"] = \"Name cannot be empty\";\n        }\n\n        if(typeof fields[\"name\"] !== \"undefined\"){\n            if(props.pokemonList? props.pokemonList.find(res => res.name.toLowerCase() === fields[\"name\"].toLowerCase()) : !fields[\"name\"]){\n               formIsValid = false;\n               errors[\"name\"] = \"You already use this name\";\n            }        \n        }\n\n       setState(prevState => ({\n            ...prevState,\n            errors\n        }))\n        \n       return formIsValid;\n   }\n\n   const handleChange = (field, e) => {\n        e.stopPropagation();  \n        e.preventDefault();    \n        let fields = state.fields;\n        fields[field] = e.target.value;\n        setState(prevState => ({\n            ...prevState,\n            fields\n        }))\n    }\n\n    //All Pokemon Layout\n    const handleShow = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        if (Math.random() < 0.5){ \n            setState({\n                fields: {},\n                errors: {}\n            })\n            setShow(true) }\n        else { \n            alert('Oops... you failed caught the pokemon')\n            window.location.reload() }\n    }\n\n    const handleKeepClicked = (e) => {\n        e.stopPropagation()\n        e.preventDefault();\n        if (handleValidation()) {\n            props.handleAddPokemon(pokemon, state.fields[\"name\"])\n            setShow(false)\n            setState({\n                fields: {},\n                errors: {}\n            })\n            window.location.reload()\n        }\n    }\n\n    //My Pokemon Layout\n    const handleReleaseClicked = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        props.handleRemovePokemon(pokemon.name)\n        // window.location.reload()\n    }\n\n    let button = pathname === '/pokemon-detail' || pathname === '/catch-random-pokemon'\n    ? <Button variant=\"primary\" className=\"button\" onClick={(e) => handleShow(e)}>\n        Catch\n    </Button>\n    : ( pathname === '/my-pokemon-list'\n        ? <Button variant=\"primary\" className=\"button\" onClick={(e) => handleReleaseClicked(e)}>\n            Release\n        </Button>\n        : null\n    )\n\n    const handleEnterInput = (e) => {\n        if (e.keyCode == 13) {\n            handleKeepClicked(e)\n        } \n    }\n\n    return (\n        <Aux>\n            { button }\n            <Modal show={showModal} onHide={() => ( setShow(false), window.location.reload()) }>\n                <Modal.Header closeButton>\n                    <Modal.Title>Yeay! You got a pokemon</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <form>\n                            <div className=\"form-group\">\n                                <label className=\"col-form-label\">Name</label>\n                                <input\n                                    refs=\"name\" \n                                    type=\"text\" \n                                    className=\"form-control textCapitalize\"\n                                    placeholder={pokemon.name}\n                                    onKeyDown={(e) => handleEnterInput(e)}\n                                    onChange={(e) => handleChange(\"name\", e)} \n                                    value={state.fields[\"name\"] || ''}\n                                    autoComplete=\"on\" />\n                                <span style={{color: \"red\"}}>{state.errors[\"name\"]}</span>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => ( setShow(false), window.location.reload() )}>\n                            Release\n                        </Button>\n                        <Button variant=\"primary\" onClick={(e) => handleKeepClicked(e)}>\n                            Keep\n                        </Button>\n                </Modal.Footer>\n            </Modal>\n        </Aux>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pokemonList: state.pokemonList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddPokemon: (data, name) => dispatch(handleAddMyPokemon(data, name)),\n        handleRemovePokemon: (name) => dispatch(handleRemoveMyPokemon(name))\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(ModalLayout);","import React, { useState, useEffect } from 'react';\nimport './Card.css';\n\n//component\nimport Aux from '../../hoc/Auxi/Auxi';\nimport Modal from '../../components/Modal/Modal';\n\n//router\nimport { useHistory } from 'react-router-dom';\n\nconst Card = (props) => {\n    const history = useHistory();\n    const { pathname } = history.location;\n    const [state, setState] = useState({\n        pokemonInfo: {},\n        loaded: false\n    })\n\n    useEffect(() => {\n        fetchData();\n    }, [props.pokemon.id]);\n\n    const fetchData = () => {\n        fetch(props.pokemon.url || `https://pokeapi.co/api/v2/pokemon/${props.pokemon.id}`)\n        .then((res) => res.json())\n            .then((response) => {\n                setState({\n                    pokemonInfo: response,\n                    pokemonSprites: response.sprites.front_default,\n                    loaded: true,\n                })\n            });\n    }\n\n    const handleCardClicked = (e, id, name) => {\n        e.stopPropagation()\n        if(props.value != 0 && pathname !== '/catch-random-pokemon') {\n            let value = pathname === '/my-pokemon-list'? 0 : 1\n            history.push(`pokemon-detail?id=${id}&name=${name}&value=${value}`)\n        }\n    }\n\n    let layout = state.loaded\n    ? pathname !== '/' && pathname !== '/my-pokemon-list'\n        ? <Aux>\n            <div className=\"textCapitalize\">\n                Type(s): {state.pokemonInfo.types[1]\n                    ? state.pokemonInfo.types[0].type.name + ' &  ' + state.pokemonInfo.types[1].type.name\n                    : state.pokemonInfo.types[0].type.name}\n            </div>\n            <div className=\"textCapitalize\">\n                Move(s): {state.pokemonInfo.moves[0]? state.pokemonInfo.moves.map(res => res.move.name).join(', ') : '-'}\n            </div>\n            <div>Height: {state.pokemonInfo.height / 10}m</div>\n            <div>Weight: {state.pokemonInfo.weight / 10}kg</div>\n        </Aux>\n        : null\n    : null\n    let pokemonList = state.loaded\n    ? <div className={'pokemonCard ' + state.pokemonInfo.types[0].type.name} onClick={(e) => handleCardClicked(e, state.pokemonInfo.id, props.pokemon.name)}>\n        <h5 className=\"textCapitalize\">{props.pokemon.name? props.pokemon.name : state.pokemonInfo.name}</h5>\n        <img src={state.pokemonSprites} alt={'Picture of ' + props.pokemon.name} />\n        { layout }\n        { props.value == 1? <Modal pokemon={state.pokemonInfo}/> : null }\n    </div>\n    : <div className=\"pokemonCard\">\n        <p>Loading...</p>\n    </div>\n\n    return (\n        <Aux>\n            { pokemonList }\n        </Aux>\n    );\n}\n\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport './ListBuilder.css';\n\n//components\nimport Card from '../../components/Card/Card';\nimport Aux from '../../hoc/Auxi/Auxi';\n\nconst ListBuilder = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n  \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    fetch(`https://pokeapi.co/api/v2/pokemon??offset=${0}&limit=${20}`)\n    .then((res) => res.json())\n      .then((response) => {\n        setPokemonList(response.results);\n      })\n  }\n\n  let finalPokemonList = pokemonList\n  ? pokemonList.map((pokemon, index) => (\n      <Card key={pokemon.name} id={index + 1} pokemon={pokemon} /> ))\n  : null\n  \n  return (\n    <Aux>\n      <div className=\"resultCards\">\n        { finalPokemonList }\n      </div>\n      <div>\n        <button>Previous</button>\n        <button>Next</button>\n      </div>\n\n    </Aux>\n  );\n}\n\nexport default ListBuilder;\n","import React from 'react';\n\n//component\nimport Card from '../../components/Card/Card';\nimport Aux from '../../hoc/Auxi/Auxi';\n\n//router\nimport { useHistory } from 'react-router-dom';\n\nconst DetailBuilder = (props) => {\n    const history = useHistory();\n    const { pathname } = history.location;\n\n    const queryString = require('query-string');\n    const parsed = queryString.parse(props.location.search);\n    const name = parsed['name'];\n    const id = parsed['id'];\n    const value = parsed['value'];\n\n    const pokemon = {'name': name, 'id': id, 'value': value};\n\n    let layout = pathname === '/catch-random-pokemon'\n    ? <Card key={1} id={1} pokemon={{url: `https://pokeapi.co/api/v2/pokemon/${Math.floor(Math.random() * 898 + 1)}`}} value={1}/>\n    : <Card key={name} id={id} pokemon={pokemon} value={value}/>\n\n    return (\n        <Aux>\n            { layout }\n        </Aux>\n    );\n}\n\nexport default DetailBuilder;","import React from 'react';\nimport './MyListBuilder.css';\n\n//component\nimport Card from '../../components/Card/Card';\n\n//redux\nimport { connect } from 'react-redux';\n\nconst MyListBuilder = (props) => {\n    let myListLayout = props.pokemonList.length !== 0\n    ? props.pokemonList.map((pokemon, index) => (\n        <Card key={index + 1} id={index + 1} pokemon={pokemon} value={1}/> ))\n    : <div>You haven't caught any pokemon</div>\n\n    return (\n        <div className=\"resultCards\">\n            { myListLayout } \n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pokemonList: state.pokemonList\n    }\n}\n\nexport default connect(mapStateToProps, null)(MyListBuilder);","import './App.css';\n\n//router\nimport { Route, Switch } from 'react-router-dom';\n\n//components\nimport Layout from './hoc/Layout';\n\n//containers\nimport ListBuilder from './containers/ListBuilder/ListBuilder';\nimport DetailBuilder from './containers/DetailBuilder/DetailBuilder';\nimport MyListBuilder from './containers/MyListBuilder/MyListBuilder';\n\nconst App = () => {\n  return (\n    <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={ListBuilder} />\n          <Route path=\"/pokemon-detail\" exact component={DetailBuilder} />\n          <Route path=\"/my-pokemon-list\" exact component={MyListBuilder} />\n          <Route path=\"/catch-random-pokemon\" exact component={DetailBuilder} />\n          <Route render={() => <h1>Not found</h1>} />\n        </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\nimport ActionType from './globalActionType';\n\nconst globalState = {\n    pokemonList: []\n}\n\n//Reducer\nconst rootReducer = (state = globalState, action) => {\n    switch (action.type) {\n        case ActionType.ADD_POKEMON:\n            let oldPokemonList = JSON.parse(localStorage.getItem('pokemon'));\n\n            if (!oldPokemonList) {\n                oldPokemonList = []\n            }\n            \n            oldPokemonList.push({id: action.data.id, name: action.name})\n            localStorage.setItem('pokemon', JSON.stringify(oldPokemonList));\n\n            return {\n                ...state,\n                pokemonList: oldPokemonList\n            }\n\n        case ActionType.SHOW_MY_POKEMON:\n            return {\n                ...state,\n                pokemonList: action.data\n            }\n\n        case ActionType.REMOVE_POKEMON:\n            const removePokemon = state.pokemonList.find(res => res.name.toLowerCase() === action.name.toLowerCase());\n            state.pokemonList.splice(state.pokemonList.indexOf(removePokemon), 1);\n            localStorage.setItem('pokemon', JSON.stringify(state.pokemonList));\n\n            return {\n                ...state,\n                pokemonList: [...state.pokemonList]\n            }\n\n        default: return state;\n    }\n}\n\nexport default rootReducer;","//react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n//router\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n//redux\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducer/globalReducer';\nimport thunk from 'redux-thunk';\n\n//Store\nconst storeRedux = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={storeRedux}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}