[{"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/index.js":"1","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/App.js":"2","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/reportWebVitals.js":"3","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/hoc/Layout.js":"4","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/hoc/Auxi/Auxi.js":"5","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Navigation/Navigation.js":"6","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Navigation/NavigationItem/NavigationItem.js":"7","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/ListBuilder/ListBuilder.js":"8","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/DetailBuilder/DetailBuilder.js":"9","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/MyListBuilder/MyListBuilder.js":"10","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Card/Card.js":"11","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/reducer/globalReducer.js":"12","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/reducer/globalActionType.js":"13","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/action/globalFunctionAction.js":"14","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Modal/Modal.js":"15"},{"size":692,"mtime":1612009465985,"results":"16","hashOfConfig":"17"},{"size":814,"mtime":1612268529496,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611641447968,"results":"19","hashOfConfig":"17"},{"size":375,"mtime":1612194574335,"results":"20","hashOfConfig":"17"},{"size":61,"mtime":1611642643880,"results":"21","hashOfConfig":"17"},{"size":2174,"mtime":1612195146173,"results":"22","hashOfConfig":"17"},{"size":587,"mtime":1611825628045,"results":"23","hashOfConfig":"17"},{"size":926,"mtime":1612266874270,"results":"24","hashOfConfig":"17"},{"size":923,"mtime":1612260054218,"results":"25","hashOfConfig":"17"},{"size":697,"mtime":1612265051631,"results":"26","hashOfConfig":"17"},{"size":2628,"mtime":1612265145333,"results":"27","hashOfConfig":"17"},{"size":1323,"mtime":1612263386755,"results":"28","hashOfConfig":"17"},{"size":326,"mtime":1612167834815,"results":"29","hashOfConfig":"17"},{"size":406,"mtime":1612186615738,"results":"30","hashOfConfig":"17"},{"size":5224,"mtime":1612264060040,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ruosdt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/index.js",[],["66","67"],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/App.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/reportWebVitals.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/hoc/Layout.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/hoc/Auxi/Auxi.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Navigation/Navigation.js",["68","69"],"import React, { useEffect } from 'react';\nimport './Navigation.css';\n\n//components\nimport Aux from '../../hoc/Auxi/Auxi';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\n//redux\nimport { connect } from 'react-redux';\nimport { handleShowMyPokemon } from '../../redux/action/globalFunctionAction';\n\nconst Navigation = (props) => {\n    useEffect(() => {\n        handleShowTotal();\n    }, []);\n\n    const handleShowTotal = () => {\n        const pokemon = JSON.parse(localStorage.getItem('pokemon'));\n        if (pokemon) props.handleShowMyPokemon(pokemon)\n    }\n\n    return (\n        <Aux>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light toolbar\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"navbar-brand image\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/Pok%C3%A9mon_GO_logo.svg/1200px-Pok%C3%A9mon_GO_logo.svg.png\"/>\n                </div>\n                \n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <hr />\n                    <ul className=\"navbar-nav\">\n                    <NavigationItem link=\"/\" hash=\"\" search=\"\" exact>All Pokemon</NavigationItem>\n                    <NavigationItem link=\"/my-pokemon-list\" hash=\"\" search=\"\">My Pokemon</NavigationItem>\n                    <NavigationItem link=\"/catch-random-pokemon\" hash=\"\" search=\"\">Random Pokemon</NavigationItem>\n                    </ul>\n                    <hr/>\n                </div>\n                <div>Total Owned: {props.totalOwn.length}</div>\n            </nav>\n        </Aux>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        totalOwn: state.pokemonList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleShowMyPokemon: (data) => dispatch(handleShowMyPokemon(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Navigation/NavigationItem/NavigationItem.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/ListBuilder/ListBuilder.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/DetailBuilder/DetailBuilder.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/containers/MyListBuilder/MyListBuilder.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Card/Card.js",["70","71","72"],"import React, { useState, useEffect } from 'react';\nimport './Card.css';\n\n//component\nimport Aux from '../../hoc/Auxi/Auxi';\nimport Modal from '../../components/Modal/Modal';\n\n//router\nimport { useHistory } from 'react-router-dom';\n\nconst Card = (props) => {\n    const history = useHistory();\n    const { pathname } = history.location;\n    const [state, setState] = useState({\n        pokemonInfo: {},\n        loaded: false\n    })\n\n    useEffect(() => {\n        fetchData();\n    }, [props.pokemon.id]);\n\n    const fetchData = () => {\n        fetch(props.pokemon.url || `https://pokeapi.co/api/v2/pokemon/${props.pokemon.id}`)\n        .then((res) => res.json())\n            .then((response) => {\n                setState({\n                    pokemonInfo: response,\n                    pokemonSprites: response.sprites.front_default,\n                    loaded: true,\n                })\n            });\n    }\n\n    const handleCardClicked = (e, id, name) => {\n        e.stopPropagation()\n        if(props.value != 0 && pathname !== '/catch-random-pokemon') {\n            let value = pathname === '/my-pokemon-list'? 0 : 1\n            history.push(`pokemon-detail?id=${id}&name=${name}&value=${value}`)\n        }\n    }\n\n    let layout = state.loaded\n    ? pathname !== '/' && pathname !== '/my-pokemon-list'\n        ? <Aux>\n            <div className=\"textCapitalize\">\n                Type(s): {state.pokemonInfo.types[1]\n                    ? state.pokemonInfo.types[0].type.name + ' &  ' + state.pokemonInfo.types[1].type.name\n                    : state.pokemonInfo.types[0].type.name}\n            </div>\n            <div className=\"textCapitalize\">\n                Move(s): {state.pokemonInfo.moves[0]? state.pokemonInfo.moves.map(res => res.move.name).join(', ') : '-'}\n            </div>\n            <div>Height: {state.pokemonInfo.height / 10}m</div>\n            <div>Weight: {state.pokemonInfo.weight / 10}kg</div>\n        </Aux>\n        : null\n    : null\n    let pokemonList = state.loaded\n    ? <div className={'pokemonCard ' + state.pokemonInfo.types[0].type.name} onClick={(e) => handleCardClicked(e, state.pokemonInfo.id, props.pokemon.name)}>\n        <h5 className=\"textCapitalize\">{props.pokemon.name? props.pokemon.name : state.pokemonInfo.name}</h5>\n        <img src={state.pokemonSprites} alt={'Picture of ' + props.pokemon.name} />\n        { layout }\n        { props.value == 1? <Modal pokemon={state.pokemonInfo}/> : null }\n    </div>\n    : <div className=\"pokemonCard\">\n        <p>Loading...</p>\n    </div>\n\n    return (\n        <Aux>\n            { pokemonList }\n        </Aux>\n    );\n}\n\n\nexport default Card;\n","/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/reducer/globalReducer.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/reducer/globalActionType.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/redux/action/globalFunctionAction.js",[],"/Users/mulyantilaw/Desktop/Tokopedia/pokemon/src/components/Modal/Modal.js",["73","74","75"],"import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport './Modal.css';\n\n//component\nimport Aux from '../../hoc/Auxi/Auxi';\n\n//router\nimport { useHistory } from 'react-router-dom';\n\n//redux\nimport { connect } from 'react-redux';\nimport { handleAddMyPokemon, handleRemoveMyPokemon } from '../../redux/action/globalFunctionAction';\n\nconst ModalLayout = (props) => {\n    const pokemon = props.pokemon;\n    const history = useHistory();\n    const { pathname } = history.location;\n\n    const [showModal, setShow] = useState(false);\n    const [state, setState] = useState({\n        fields: {},\n        errors: {}\n    })\n\n    const handleValidation = () => {\n        let fields = state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if(!fields[\"name\"]){\n            formIsValid = false;\n            errors[\"name\"] = \"Name cannot be empty\";\n        }\n\n        if(typeof fields[\"name\"] !== \"undefined\"){\n            if(props.pokemonList? props.pokemonList.find(res => res.name.toLowerCase() === fields[\"name\"].toLowerCase()) : !fields[\"name\"]){\n               formIsValid = false;\n               errors[\"name\"] = \"You already use this name\";\n            }        \n        }\n\n       setState(prevState => ({\n            ...prevState,\n            errors\n        }))\n        \n       return formIsValid;\n   }\n\n   const handleChange = (field, e) => {\n        e.stopPropagation();  \n        e.preventDefault();    \n        let fields = state.fields;\n        fields[field] = e.target.value;\n        setState(prevState => ({\n            ...prevState,\n            fields\n        }))\n    }\n\n    //All Pokemon Layout\n    const handleShow = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        if (Math.random() < 0.5){ \n            setState({\n                fields: {},\n                errors: {}\n            })\n            setShow(true) }\n        else { \n            alert('Oops... you failed caught the pokemon')\n            window.location.reload() }\n    }\n\n    const handleKeepClicked = (e) => {\n        e.stopPropagation()\n        e.preventDefault();\n        if (handleValidation()) {\n            props.handleAddPokemon(pokemon, state.fields[\"name\"])\n            setShow(false)\n            setState({\n                fields: {},\n                errors: {}\n            })\n            window.location.reload()\n        }\n    }\n\n    //My Pokemon Layout\n    const handleReleaseClicked = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        props.handleRemovePokemon(pokemon.name)\n        // window.location.reload()\n    }\n\n    let button = pathname === '/pokemon-detail' || pathname === '/catch-random-pokemon'\n    ? <Button variant=\"primary\" className=\"button\" onClick={(e) => handleShow(e)}>\n        Catch\n    </Button>\n    : ( pathname === '/my-pokemon-list'\n        ? <Button variant=\"primary\" className=\"button\" onClick={(e) => handleReleaseClicked(e)}>\n            Release\n        </Button>\n        : null\n    )\n\n    const handleEnterInput = (e) => {\n        if (e.keyCode == 13) {\n            handleKeepClicked(e)\n        } \n    }\n\n    return (\n        <Aux>\n            { button }\n            <Modal show={showModal} onHide={() => ( setShow(false), window.location.reload()) }>\n                <Modal.Header closeButton>\n                    <Modal.Title>Yeay! You got a pokemon</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <form>\n                            <div className=\"form-group\">\n                                <label className=\"col-form-label\">Name</label>\n                                <input\n                                    refs=\"name\" \n                                    type=\"text\" \n                                    className=\"form-control textCapitalize\"\n                                    placeholder={pokemon.name}\n                                    onKeyDown={(e) => handleEnterInput(e)}\n                                    onChange={(e) => handleChange(\"name\", e)} \n                                    value={state.fields[\"name\"] || ''}\n                                    autoComplete=\"on\" />\n                                <span style={{color: \"red\"}}>{state.errors[\"name\"]}</span>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => ( setShow(false), window.location.reload() )}>\n                            Release\n                        </Button>\n                        <Button variant=\"primary\" onClick={(e) => handleKeepClicked(e)}>\n                            Keep\n                        </Button>\n                </Modal.Footer>\n            </Modal>\n        </Aux>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pokemonList: state.pokemonList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddPokemon: (data, name) => dispatch(handleAddMyPokemon(data, name)),\n        handleRemovePokemon: (name) => dispatch(handleRemoveMyPokemon(name))\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(ModalLayout);",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":15,"column":8,"nodeType":"82","endLine":15,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":29,"column":21,"nodeType":"86","endLine":29,"endColumn":152},{"ruleId":"80","severity":1,"message":"87","line":21,"column":8,"nodeType":"82","endLine":21,"endColumn":26,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":37,"column":24,"nodeType":"91","messageId":"92","endLine":37,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":64,"column":23,"nodeType":"91","messageId":"92","endLine":64,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":111,"column":23,"nodeType":"91","messageId":"92","endLine":111,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":119,"column":67,"nodeType":"96","messageId":"97","endLine":119,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":141,"column":84,"nodeType":"96","messageId":"97","endLine":141,"endColumn":85},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleShowTotal'. Either include it or remove the dependency array.","ArrayExpression",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["101"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [handleShowTotal]",{"range":"106","text":"107"},"Update the dependencies array to be: [fetchData, props.pokemon.id]",{"range":"108","text":"109"},[400,402],"[handleShowTotal]",[482,500],"[fetchData, props.pokemon.id]"]